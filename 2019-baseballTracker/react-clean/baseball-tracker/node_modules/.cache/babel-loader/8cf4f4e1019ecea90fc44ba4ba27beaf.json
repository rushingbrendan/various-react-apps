{"ast":null,"code":"var _jsxFileName = \"/Users/rushing/2019-baseballTracker/react-clean/baseball-tracker/src/components/FetchData.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actionCreators } from '../store/WeatherForecasts';\n\nclass FetchData extends Component {\n  componentWillMount() {\n    // This method runs when the component is first added to the page\n    const startDateIndex = parseInt(this.props.match.params.startDateIndex, 10) || 0;\n    this.props.requestWeatherForecasts(startDateIndex);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // This method runs when incoming props (e.g., route params) change\n    const startDateIndex = parseInt(nextProps.match.params.startDateIndex, 10) || 0;\n    this.props.requestWeatherForecasts(startDateIndex);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Weather forecast\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"This component demonstrates fetching data from the server and working with URL parameters.\"), renderForecastsTable(this.props), renderPagination(this.props));\n  }\n\n}\n\nfunction renderForecastsTable(props) {\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Temp. (C)\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Temp. (F)\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Summary\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.forecasts.map(forecast => React.createElement(\"tr\", {\n    key: forecast.dateFormatted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, forecast.dateFormatted), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, forecast.temperatureC), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, forecast.temperatureF), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, forecast.summary)))));\n}\n\nfunction renderPagination(props) {\n  const prevStartDateIndex = (props.startDateIndex || 0) - 5;\n  const nextStartDateIndex = (props.startDateIndex || 0) + 5;\n  return React.createElement(\"p\", {\n    className: \"clearfix text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-default pull-left\",\n    to: \"/fetchdata/\".concat(prevStartDateIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Previous\"), React.createElement(Link, {\n    className: \"btn btn-default pull-right\",\n    to: \"/fetchdata/\".concat(nextStartDateIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Next\"), props.isLoading ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Loading...\") : []);\n}\n\nexport default connect(state => state.weatherForecasts, dispatch => bindActionCreators(actionCreators, dispatch))(FetchData);","map":{"version":3,"sources":["/Users/rushing/2019-baseballTracker/react-clean/baseball-tracker/src/components/FetchData.js"],"names":["React","Component","bindActionCreators","connect","Link","actionCreators","FetchData","componentWillMount","startDateIndex","parseInt","props","match","params","requestWeatherForecasts","componentWillReceiveProps","nextProps","render","renderForecastsTable","renderPagination","forecasts","map","forecast","dateFormatted","temperatureC","temperatureF","summary","prevStartDateIndex","nextStartDateIndex","isLoading","state","weatherForecasts","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { actionCreators } from '../store/WeatherForecasts';\r\n\r\nclass FetchData extends Component {\r\n  componentWillMount() {\r\n    // This method runs when the component is first added to the page\r\n    const startDateIndex = parseInt(this.props.match.params.startDateIndex, 10) || 0;\r\n    this.props.requestWeatherForecasts(startDateIndex);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // This method runs when incoming props (e.g., route params) change\r\n    const startDateIndex = parseInt(nextProps.match.params.startDateIndex, 10) || 0;\r\n    this.props.requestWeatherForecasts(startDateIndex);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server and working with URL parameters.</p>\r\n        {renderForecastsTable(this.props)}\r\n        {renderPagination(this.props)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction renderForecastsTable(props) {\r\n  return (\r\n    <table className='table'>\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Temp. (C)</th>\r\n          <th>Temp. (F)</th>\r\n          <th>Summary</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.forecasts.map(forecast =>\r\n          <tr key={forecast.dateFormatted}>\r\n            <td>{forecast.dateFormatted}</td>\r\n            <td>{forecast.temperatureC}</td>\r\n            <td>{forecast.temperatureF}</td>\r\n            <td>{forecast.summary}</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction renderPagination(props) {\r\n  const prevStartDateIndex = (props.startDateIndex || 0) - 5;\r\n  const nextStartDateIndex = (props.startDateIndex || 0) + 5;\r\n\r\n  return <p className='clearfix text-center'>\r\n    <Link className='btn btn-default pull-left' to={`/fetchdata/${prevStartDateIndex}`}>Previous</Link>\r\n    <Link className='btn btn-default pull-right' to={`/fetchdata/${nextStartDateIndex}`}>Next</Link>\r\n    {props.isLoading ? <span>Loading...</span> : []}\r\n  </p>;\r\n}\r\n\r\nexport default connect(\r\n  state => state.weatherForecasts,\r\n  dispatch => bindActionCreators(actionCreators, dispatch)\r\n)(FetchData);\r\n"]},"metadata":{},"sourceType":"module"}