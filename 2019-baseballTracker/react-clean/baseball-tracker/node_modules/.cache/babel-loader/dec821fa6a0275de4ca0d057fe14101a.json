{"ast":null,"code":"import _objectSpread from \"/Users/rushing/2019-baseballTracker/react-clean/baseball-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\nimport * as Counter from './Counter';\nimport * as WeatherForecasts from './WeatherForecasts';\nexport default function configureStore(history, initialState) {\n  const reducers = {\n    counter: Counter.reducer,\n    weatherForecasts: WeatherForecasts.reducer\n  };\n  const middleware = [thunk, routerMiddleware(history)]; // In development, use the browser's Redux dev tools extension if installed\n\n  const enhancers = [];\n  const isDevelopment = process.env.NODE_ENV === 'development';\n\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\n    enhancers.push(window.devToolsExtension());\n  }\n\n  const rootReducer = combineReducers(_objectSpread({}, reducers, {\n    routing: routerReducer\n  }));\n  return createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), ...enhancers));\n}","map":{"version":3,"sources":["/Users/rushing/2019-baseballTracker/react-clean/baseball-tracker/src/store/configureStore.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","routerReducer","routerMiddleware","Counter","WeatherForecasts","configureStore","history","initialState","reducers","counter","reducer","weatherForecasts","middleware","enhancers","isDevelopment","process","env","NODE_ENV","window","devToolsExtension","push","rootReducer","routing"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,oBAAlC;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,YAAjC,EAA+C;AAC5D,QAAMC,QAAQ,GAAG;AACfC,IAAAA,OAAO,EAAEN,OAAO,CAACO,OADF;AAEfC,IAAAA,gBAAgB,EAAEP,gBAAgB,CAACM;AAFpB,GAAjB;AAKA,QAAME,UAAU,GAAG,CACjBZ,KADiB,EAEjBE,gBAAgB,CAACI,OAAD,CAFC,CAAnB,CAN4D,CAW5D;;AACA,QAAMO,SAAS,GAAG,EAAlB;AACA,QAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA/C;;AACA,MAAIH,aAAa,IAAI,OAAOI,MAAP,KAAkB,WAAnC,IAAkDA,MAAM,CAACC,iBAA7D,EAAgF;AAC9EN,IAAAA,SAAS,CAACO,IAAV,CAAeF,MAAM,CAACC,iBAAP,EAAf;AACD;;AAED,QAAME,WAAW,GAAGxB,eAAe,mBAC9BW,QAD8B;AAEjCc,IAAAA,OAAO,EAAErB;AAFwB,KAAnC;AAKA,SAAOF,WAAW,CAChBsB,WADgB,EAEhBd,YAFgB,EAGhBT,OAAO,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,EAAiC,GAAGC,SAApC,CAHS,CAAlB;AAKD","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { routerReducer, routerMiddleware } from 'react-router-redux';\r\nimport * as Counter from './Counter';\r\nimport * as WeatherForecasts from './WeatherForecasts';\r\n\r\nexport default function configureStore(history, initialState) {\r\n  const reducers = {\r\n    counter: Counter.reducer,\r\n    weatherForecasts: WeatherForecasts.reducer\r\n  };\r\n\r\n  const middleware = [\r\n    thunk,\r\n    routerMiddleware(history)\r\n  ];\r\n\r\n  // In development, use the browser's Redux dev tools extension if installed\r\n  const enhancers = [];\r\n  const isDevelopment = process.env.NODE_ENV === 'development';\r\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\r\n    enhancers.push(window.devToolsExtension());\r\n  }\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    routing: routerReducer\r\n  });\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ...enhancers)\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}