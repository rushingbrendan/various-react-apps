{"ast":null,"code":"var _jsxFileName = \"/Users/rushing/2019-baseballTracker/react-clean/baseball-tracker/src/index.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker'; // Create browser history to use in the Redux store\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href'); //const history = createBrowserHistory();\n\nimport createHistory from \"history/createBrowserHistory\";\nexport const history = createHistory(); // Get the application-wide store instance, prepopulating with state from the server where available.\n\nconst initialState = window.initialReduxState;\nconst store = configureStore(history, initialState);\nconst rootElement = document.getElementById('root'); //<ConnectedRouter history={history}>\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}))), rootElement);\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/rushing/2019-baseballTracker/react-clean/baseball-tracker/src/index.js"],"names":["React","ReactDOM","Provider","ConnectedRouter","BrowserRouter","createBrowserHistory","configureStore","App","registerServiceWorker","baseUrl","document","getElementsByTagName","getAttribute","createHistory","history","initialState","window","initialReduxState","store","rootElement","getElementById","render"],"mappings":";AAAA,OAAO,kCAAP;AACA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC,C,CAEA;;AACA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,YAAzC,CAAsD,MAAtD,CAAhB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAO,MAAMC,OAAO,GAAGD,aAAa,EAA7B,C,CAEP;;AACA,MAAME,YAAY,GAAGC,MAAM,CAACC,iBAA5B;AACA,MAAMC,KAAK,GAAGZ,cAAc,CAACQ,OAAD,EAAUC,YAAV,CAA5B;AAEA,MAAMI,WAAW,GAAGT,QAAQ,CAACU,cAAT,CAAwB,MAAxB,CAApB,C,CAEA;;AAEAnB,QAAQ,CAACoB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEC,WANF;AAQAX,qBAAqB","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'react-router-redux';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\n//const history = createBrowserHistory();\r\nimport createHistory from \"history/createBrowserHistory\";\r\nexport const history = createHistory();\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst initialState = window.initialReduxState;\r\nconst store = configureStore(history, initialState);\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\n//<ConnectedRouter history={history}>\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n"]},"metadata":{},"sourceType":"module"}